name: Proxy docs preview site via www preview site

on: [pull_request, workflow_dispatch] # pull_request for testing only, remove later

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.normalize.outputs.NORMALIZED_BRANCH }}
    steps:
      - id: normalize
        name: Normalize branch name
        run: echo "NORMALIZED_BRANCH=$(echo "$GITHUB_REF_NAME" | sed 's|/|-|' | sed 's|\.||')" >> $GITHUB_OUTPUT
      - id: log
        name: Log branch name
        run: echo "branch ${{ steps.normalize.outputs.NORMALIZED_BRANCH }}"
          #   docs:
          #     runs-on: ubuntu-latest
          #     needs: setup
          #     env:
          #       VERCEL_PROJECT_ID: 
  studio:
    runs-on: ubuntu-latest
    needs: setup
    env:
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_STUDIO_STAGING_PROJECT_ID }}
    outputs:
      url: ${{ steps.deploy.outputs.DEPLOY_URL }}
    steps:
      - id: checkout
        name: Checkout studio
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            apps/studio
            packages
      - id: node
        name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
      - id: install
        name: Install dependencies
        working-directory: ./
        run: npm ci
      - id: cli
        name: Install Vercel CLI
        run: npm install --global vercel
      - id: build
        name: Build
        working-directory: ./
        run: |
          vercel build --yes --token ${{ secrets.VERCEL_TOKEN }}
      - id: deploy
        name: Deploy
        working-directory: ./
        run: |
          echo "DEPLOY_URL=$(vercel deploy --cwd apps/studio --prebuilt --yes --token ${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT
          #   www:
          #     runs-on: ubuntu-latest
          #     needs: studio
          #     environment:
          #       name: preview
          #       url: ${{ steps.deploy.outputs.DEPLOY_URL }}
          #     env:
          #       VERCEL_PROJECT_ID:
          #     steps:
          #       - id: checkout
          #         name: Checkout www
          #         uses: actions/checkout@v4
          #         with:
          #           sparse-checkout: |
          #             apps/www
          #             packages
          #       - id: node
          #         name: Set up Node
          #         uses: actions/setup-node@v3
          #         with:
          #           node-version: 18.x
          #           cache: 'npm'
          #       - id: install
          #         name: Install dependencies
          #         working-directory: ./
          #         run: npm ci
          #       - id: cli
          #         name: Install Vercel CLI
          #         run: npm install --global vercel
          #       - id: pull
          #         name: Pull Vercel environment
          #         working-directory: ./
          #         run: |
          #           vercel pull --cwd apps/www --environment-preview --yes --token ${{ secrets.VERCEL_TOKEN }}
          #       - id: build
          #         name: Build
          #         working-directory: ./
          #         run: |
          #           vercel build --yes --token ${{ secrets.VERCEL_TOKEN }}
          #       - id: deploy
          #         name: Deploy
          #         run: |
          #           # See https://vercel.com/docs/deployments/generated-urls#url-with-git-branch
          #           export DOCS_PATH="https://docs-git-${{ needs.setup.outputs.branch }}-supabase.vercel.app/docs"
          #           export STUDIO_PATH="https://studio-staging-git-${{ needs.studio.outputs.url }}-supabase.vercel.app/dashboard"
          #           echo "DEPLOY_URL=$(vercel deploy --prebuilt --yes --token ${{ secrets.VERCEL_TOKEN }} \
          #             --env NEXT_PUBLIC_STUDIO_URL=$DOCS_PATH NEXT_PUBLIC_DOCS_URL=$STUDIO_PATH)" >> $GITHUB_OUTPUT
